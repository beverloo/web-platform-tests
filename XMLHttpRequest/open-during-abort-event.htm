<!doctype html>
<html>
  <head>
    <title>XMLHttpRequest: open() during abort event - abort() called from upload.onloadstart</title>
    <script src="/resources/testharness.js"></script>
    <script src="/resources/testharnessreport.js"></script>
    <link rel="help" href="http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#the-open()-method" data-tested-assertations="following::ol/li[15] following::ol/li[15]/ol/li[1] following::ol/li[15]/ol/li[2]" />
    <link rel="help" href="http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#dom-xmlhttprequest-abort" data-tested-assertations="following::ol/li[2]/ol/li[3]" />
    <!-- TODO: no suitable assertation in spec yet for the main point of this test - see https://www.w3.org/Bugs/Public/show_bug.cgi?id=27033#c5 -->
  </head>
  <body>
    <div id="log"></div>
    <script>
      var test = async_test()
      var client = new XMLHttpRequest(), log = []

      client.upload.onloadstart = function(){
        log.push('upload.onloadstart')
        client.abort() // This will trigger an abort event
      }

      client.upload.onabort = test.step_func(function () {
        // this, if enabled, would also test #dom-xmlhttprequest-abort step following::ol/li[2]/ol/li[1]
        //assert_equals(client.readyState, client.DONE, 'abort() should first set readyState to DONE')
        log.push('upload.onabort')
        client.open("GET", "resources/well-formed.xml")
        assert_equals(client.readyState, client.OPENED, 'readyState after open()')
        client.send(null)
      })

      client.onabort = test.step_func(function () {
        assert_unreached('abort() algorithm should have been terminated by open() in the handler')
      })

      client.onload = test.step_func(function(){
        alert(log)
        assert_array_equals(log, ['upload.onloadstart', 'upload.onabort'])
        test.done()
      })

      client.open("POST", "resources/well-formed.xml")
      client.send(document)
    </script>
  </body>
</html>
